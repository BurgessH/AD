[Plugin]
Name=interrupts
Implement=interrupts
Require0=pal
SourceFile0=services\platform\interrupts\src\interrupts.c
Caption=Interrupt Management
Description=Interrupt management routines

[Option0]
Name=VECTOR_BASE
GUIName=Vector Base Address
Description=The base address where the interrupt vector table will be located in internal processor memory. This value will be written to the 16-bit exception base register ($EB) during startup. All vector table slots in use will be located relative to this address. By default the base address is 0x100.
Kind=UINT16
MinRange=0x8
NoGenerate=True
GenerateLinkerDefine=__EXCEPTION_BASE
DefaultValue=0x100

[Option0_Available_If0]
Kind=ENVIRONMENT
Object=TOOLCHAIN
Condition=EQ
Value=TASKING 3000

[Option1]
Name=APPLICATION_MASK
GUIName=Application ISR Mask
Description=Interrupt mask for interrupts not part of the software plaform. Set the N-th bit in this mask (31..0) if your application defines a handler (ISR) for interrupt N. Examples: specify 0x8 for interrupt 3, specify 0xA for interrupts 1 and 3.
Kind=UINT32
DefaultValue=0x0

[Option2]
Name=ISR_MAX
GUIName=Maximum ISRs
Description=You use more than one ISR per interrupt line if (a) several devices share one line, (b) software reasons or (c) several threads wait simultaneously on one interrupt.
Kind=UINT8
MinRange=1
MaxRange=32
DefaultValue=1

